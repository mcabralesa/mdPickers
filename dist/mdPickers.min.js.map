{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","time","autoSwitch","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","moment","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","i","push","DatePickerCtrl","$timeout","currentDate","options","date","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","then","CalendarCtrl","daysInThisMonth","now","Date","getFullYear","getMonth","getDate","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","value","enabled","isDayEnabled","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","e","off","$on","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","isObject","show","clickOutsideToClose","targetEvent","locals","skipHide","$mdpTimePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","timeFormat","disabled","ngModel","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","clone","append","$error","setInvalid","Object","keys","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","dateFormat","pre","post","updateDate","model","isError","$invalid","month"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$mdIconProvider.icon(icon.id, icon.url);\r\n\t});\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$templateCache.put(icon.url, icon.svg);\r\n\t});\r\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-access-time',\r\n        url: 'mdp-access-time.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-event',\r\n        url: 'mdp-event.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\r\n   return {\r\n        restrict: \"EA\",\r\n        priority: 101,\r\n        compile: function(element) {\r\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\r\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\r\n            \r\n            // If we are not a child of an input container, don't do anything\r\n            if (!inputContainer) return;\r\n            \r\n            // Add our animation class\r\n            element.toggleClass('md-input-message-animation', true);\r\n            \r\n            return {};\r\n        }\r\n    } \r\n}]);\n/* global moment, angular */\r\n\r\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\r\n\tvar self = this;\r\n    this.VIEW_HOURS = 1;\r\n    this.VIEW_MINUTES = 2;\r\n    this.currentView = this.VIEW_HOURS;\r\n    this.time = moment(time);\r\n    this.autoSwitch = !!autoSwitch;\r\n    \r\n    this.clockHours = parseInt(this.time.format(\"h\"));\r\n    this.clockMinutes = parseInt(this.time.minutes());\r\n    \r\n\t$scope.$mdMedia = $mdMedia;\r\n\t\r\n\tthis.switchView = function() {\r\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\r\n\t};\r\n    \r\n\tthis.setAM = function() {\r\n        if(self.time.hours() >= 12)\r\n            self.time.hour(self.time.hour() - 12);\r\n\t};\r\n    \r\n    this.setPM = function() {\r\n        if(self.time.hours() < 12)\r\n            self.time.hour(self.time.hour() + 12);\r\n\t};\r\n    \r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n        $mdDialog.hide(this.time.toDate());\r\n    };\r\n}\r\n\r\nfunction ClockCtrl($scope) {\r\n    var TYPE_HOURS = \"hours\";\r\n    var TYPE_MINUTES = \"minutes\";\r\n    var self = this;\r\n    \r\n    this.STEP_DEG = 360 / 12;\r\n    this.steps = [];\r\n    \r\n    this.CLOCK_TYPES = {\r\n        \"hours\": {\r\n            range: 12,\r\n        },\r\n        \"minutes\": {\r\n            range: 60,\r\n        }\r\n    }\r\n    \r\n    this.getPointerStyle = function() {\r\n        var divider = 1;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n        return { \r\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n        }\r\n    };\r\n    \r\n    this.setTimeByDeg = function(deg) {\r\n        deg = deg >= 360 ? 0 : deg;\r\n        var divider = 0;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        \r\n        self.setTime(\r\n            Math.round(divider / 360 * deg)\r\n        );\r\n    };\r\n    \r\n    this.setTime = function(time, type) {\r\n        this.selected = time;\r\n        \r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                if(self.time.format(\"A\") == \"PM\") time += 12;\r\n                this.time.hours(time);\r\n                break;\r\n            case TYPE_MINUTES:\r\n                if(time > 59) time -= 60;\r\n                this.time.minutes(time);\r\n                break;\r\n        }\r\n        \r\n    };\r\n    \r\n    this.init = function() {\r\n        self.type = self.type || \"hours\";\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                for(var i = 1; i <= 12; i++)\r\n                    self.steps.push(i);\r\n                self.selected = self.time.hours() || 0;\r\n                if(self.selected > 12) self.selected -= 12;\r\n                    \r\n                break;\r\n            case TYPE_MINUTES:\r\n                for(var i = 5; i <= 55; i+=5)\r\n                    self.steps.push(i);\r\n                self.steps.push(0);\r\n                self.selected = self.time.minutes() || 0;\r\n                \r\n                break;\r\n        }\r\n    };\r\n    \r\n    this.init();\r\n}\r\n\r\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            'type': '@?',\r\n            'time': '=',\r\n            'autoSwitch': '=?'\r\n        },\r\n        replace: true,\r\n        template: '<div class=\"mdp-clock\">' +\r\n                        '<div class=\"mdp-clock-container\">' +\r\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\r\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\r\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\r\n                            '</md-toolbar>' +\r\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\r\n                        '</div>' +\r\n                    '</div>',\r\n        controller: [\"$scope\", ClockCtrl],\r\n        controllerAs: \"clock\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\r\n                timepickerCtrl = scope.$parent.timepicker;\r\n            \r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $timeout(function() {\r\n                    ctrl.setTimeByDeg(deg + 180);\r\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\r\n                });\r\n            }; \r\n            \r\n            element.on(\"mousedown\", function() {\r\n               element.on(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            element.on(\"mouseup\", function(e) {\r\n                element.off(\"mousemove\");\r\n            });\r\n            \r\n            element.on(\"click\", onEvent);\r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", onEvent);\r\n                element.off(\"mousemove\", onEvent); \r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.provider(\"$mdpTimePicker\", function() {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\";\r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var timePicker = function(time, options) {\r\n            if(!angular.isDate(time)) time = Date.now();\r\n            if (!angular.isObject(options)) options = {};\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\r\n                controllerAs: 'timepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\r\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\r\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\r\n                                    '</div>' +\r\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \r\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\r\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\r\n                                    '</div>' + \r\n                                '</md-toolbar>' +\r\n                                '<div>' +\r\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\r\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\r\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\r\n                                    '</div>' +\r\n                                    \r\n                                    '<md-dialog-actions layout=\"row\">' +\r\n\t                                \t'<span flex></span>' +\r\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: options.targetEvent,\r\n                locals: {\r\n                    time: time,\r\n                    autoSwitch: options.autoSwitch\r\n                },\r\n                skipHide: true\r\n            });\r\n        };\r\n    \r\n        return timePicker;\r\n    }];\r\n});\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\r\n    return  {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        transclude: true,\r\n        template: function(element, attrs) {\r\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n            \r\n            return '<div layout layout-align=\"start start\">' +\r\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\r\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\r\n                    '</md-button>' +\r\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                    '</md-input-container>' +\r\n                '</div>';\r\n        },\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\",\r\n            \"placeholder\": \"@mdpPlaceholder\",\r\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n            \"disabled\": \"=?mdpDisabled\"\r\n        },\r\n        link: function(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n                \r\n            $transclude(function(clone) {\r\n               inputContainer.append(clone); \r\n            });\r\n            \r\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n            \r\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\r\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\r\n            scope.autoSwitch = scope.autoSwitch || false;\r\n            \r\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\r\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n            }, true);\r\n            \r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var time = angular.isDate(value) && moment(value);\r\n                if(time && time.isValid()) \r\n                    updateInputElement(time.format(scope.timeFormat));\r\n                else\r\n                    updateInputElement(null);\r\n            });\r\n            \r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\r\n            };\r\n            \r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\r\n            };\r\n            \r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.timeFormat, true);\r\n                if(parsed.isValid()) {\r\n                    if(angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.minutes(parsed.minutes());\r\n                        originalModel.hours(parsed.hours());\r\n                        originalModel.seconds(parsed.seconds());\r\n                        \r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate(); \r\n                } else\r\n                    return null;\r\n            });\r\n            \r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n            \r\n            function updateTime(time) {\r\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\r\n                    strValue = value.format(scope.timeFormat);\r\n\r\n                if(value.isValid()) {\r\n                    updateInputElement(strValue);\r\n                    ngModel.$setViewValue(strValue);\r\n                } else {\r\n                    updateInputElement(time);\r\n                    ngModel.$setViewValue(time);\r\n                }\r\n                \r\n                if(!ngModel.$pristine && \r\n                    messages.hasClass(\"md-auto-hide\") && \r\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n                \r\n                ngModel.$render();\r\n            }\r\n                \r\n            scope.showPicker = function(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function(time) {\r\n                    updateTime(time, true);\r\n                });\r\n            };\r\n            \r\n            function onInputElementEvents(event) {\r\n                if(event.target.value !== ngModel.$viewVaue)\r\n                    updateTime(event.target.value);\r\n            }\r\n            \r\n            inputElement.on(\"reset input blur\", onInputElementEvents);\r\n            \r\n            scope.$on(\"$destroy\", function() {\r\n                inputElement.off(\"reset input blur\", onInputElementEvents);\r\n            })\r\n        }\r\n    };\r\n}]);\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\",\r\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n        },\r\n        link: function(scope, element, attrs, ngModel, $transclude) {\r\n            scope.format = scope.format || \"HH:mm\";\r\n            function showPicker(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n            \r\n            element.on(\"click\", showPicker);\r\n            \r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", showPicker);\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\n/* global moment, angular */\r\n\r\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n    var self = this;\r\n\r\n    this.date = moment(currentDate);\r\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n    this.selectingYear = false;\r\n    \r\n    // validate min and max date\r\n\tif (this.minDate && this.maxDate) {\r\n\t\tif (this.maxDate.isBefore(this.minDate)) {\r\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (this.date) {\r\n\t\t// check min date\r\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\r\n\t\t\tthis.date = moment(this.minDate);\r\n    \t}\r\n    \t\r\n    \t// check max date\r\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n\t\t\tthis.date = moment(this.maxDate);\r\n    \t}\r\n\t}\r\n\t\r\n\tthis.yearItems = {\r\n        currentIndex_: 0,\r\n        PAGE_SIZE: 5,\r\n        START: (self.minDate ? self.minDate.year() : 1900),\r\n        END: (self.maxDate ? self.maxDate.year() : 0),\r\n        getItemAtIndex: function(index) {\r\n        \tif(this.currentIndex_ < index)\r\n                this.currentIndex_ = index;\r\n        \t\r\n        \treturn this.START + index;\r\n        },\r\n        getLength: function() {\r\n            return Math.min(\r\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                Math.abs(this.START - this.END) + 1\r\n            );\r\n        }\r\n    };\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n    $scope.year = this.date.year();\r\n\r\n\tthis.selectYear = function(year) {\r\n        self.date.year(year);\r\n        $scope.year = year;\r\n        self.selectingYear = false;\r\n        self.animate();\r\n    };\r\n    \r\n    this.showYear = function() { \r\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n        self.selectingYear = true;\r\n    };\r\n    \r\n    this.showCalendar = function() {\r\n        self.selectingYear = false;\r\n    };\r\n\r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n    \tvar date = this.date;\r\n    \t\r\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\r\n    \t\tdate = moment(this.minDate);\r\n    \t}\r\n    \t\r\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n    \t\tdate = moment(this.maxDate);\r\n    \t}  \t\r\n    \t\r\n        $mdDialog.hide(date.toDate());\r\n    };\r\n    \r\n    this.animate = function() {\r\n        self.animating = true;\r\n        $timeout(angular.noop).then(function() {\r\n            self.animating = false;\r\n        })  \r\n    };\r\n}\r\n\r\nmodule.provider(\"$mdpDatePicker\", function() {\r\n    var LABEL_OK = \"Aceptar\",\r\n        LABEL_CANCEL = \"Cancelar\",\r\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\r\n        \r\n    this.setDisplayFormat = function(format) {\r\n        DISPLAY_FORMAT = format;    \r\n    };\r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var datePicker = function(currentDate, options) {\r\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n            if (!angular.isObject(options)) options = {};\r\n            \r\n            options.displayFormat = DISPLAY_FORMAT;\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\r\n                controllerAs: 'datepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\r\n                                '<div layout=\"column\" layout-align=\"start center\">' +\r\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\r\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\r\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\r\n                                    '</md-toolbar>' + \r\n                                '</div>' +  \r\n                                '<div>' + \r\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\r\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\r\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\r\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\r\n                                            '</div>' +\r\n                                        '</md-virtual-repeat-container>' +\r\n                                    '</div>' +\r\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\r\n                                    '<md-dialog-actions layout=\"row\">' +\r\n                                    \t'<span flex></span>' +\r\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: options.targetEvent,\r\n                locals: {\r\n                    currentDate: currentDate,\r\n                    options: options\r\n                },\r\n                skipHide: true\r\n            });\r\n        };\r\n    \r\n        return datePicker;\r\n    }];\r\n});\r\n\r\nfunction CalendarCtrl($scope) {\r\n\tvar self = this;\r\n\tthis.dow = moment.localeData().firstDayOfWeek();\r\n\t\r\n    this.weekDays = [].concat(\r\n        moment.weekdaysMin().slice(\r\n            this.dow\r\n        ),\r\n        moment.weekdaysMin().slice(\r\n            0, \r\n            this.dow\r\n        )\r\n    );\r\n    \r\n    this.daysInMonth = [];\r\n\r\n\r\n    function daysInThisMonth() {\r\n        var now = new Date();\r\n        return new Date(now.getFullYear(), now.getMonth()+1, 0).getDate();\r\n    }\r\n    \r\n    this.getDaysInMonth = function() {\r\n        var days = daysInThisMonth(),\r\n            firstDay = moment(self.date).date(1).day() - this.dow;\r\n            \r\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\r\n            \r\n\r\n        var arr = [];\r\n        for(var i = 1; i <= (firstDay + days); i++) {\r\n            var day = null;\r\n            if(i > firstDay) {\r\n                day =  {\r\n                    value: (i - firstDay),\r\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                };\r\n            }\r\n            arr.push(day);\r\n        }\r\n \r\n        return arr;\r\n    };\r\n    \r\n    this.isDayEnabled = function(day) {\r\n        return (!this.minDate || this.minDate <= day) && \r\n            (!this.maxDate || this.maxDate >= day) && \r\n            (!self.dateFilter || !self.dateFilter(day));\r\n    };\r\n    \r\n    this.selectDate = function(dom) {\r\n        self.date.date(dom);\r\n    };\r\n\r\n    this.nextMonth = function() {\r\n        self.date.add(1, 'months');\r\n    };\r\n\r\n    this.prevMonth = function() {\r\n        self.date.subtract(1, 'months');\r\n    };\r\n    \r\n    this.updateDaysInMonth = function() {\r\n        self.daysInMonth = self.getDaysInMonth();\r\n    };\r\n    \r\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\r\n        if(newValue && newValue !== oldValue)\r\n            self.updateDaysInMonth();\r\n    })\r\n    \r\n    self.updateDaysInMonth();\r\n}\r\n\r\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            \"date\": \"=\",\r\n            \"minDate\": \"=\",\r\n            \"maxDate\": \"=\",\r\n            \"dateFilter\": \"=\"\r\n        },\r\n        template: '<div class=\"mdp-calendar\">' +\r\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\r\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\r\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\r\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\r\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\r\n                        '</div>' +\r\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\r\n                    '</div>' +\r\n                '</div>',\r\n        controller: [\"$scope\", CalendarCtrl],\r\n        controllerAs: \"calendar\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector(\".mdp-calendar-week-days\"),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function(a) {\r\n               return angular.element(a); \r\n            });\r\n                \r\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\r\n                var direction = null;\r\n                \r\n                if(newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if(newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n                \r\n                if(direction) {\r\n                    for(var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nfunction formatValidator(value, format) {\r\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n}\r\n\r\nfunction minDateValidator(value, format, minDate) {\r\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\r\n    \r\n    return !value || \r\n            angular.isDate(value) || \r\n            !minDate.isValid() || \r\n            date.isSameOrAfter(minDate);\r\n}\r\n\r\nfunction maxDateValidator(value, format, maxDate) {\r\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\r\n    \r\n    return !value || \r\n            angular.isDate(value) || \r\n            !maxDate.isValid() || \r\n            date.isSameOrBefore(maxDate);\r\n}\r\n\r\nfunction filterValidator(value, format, filter) {\r\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\r\n                \r\n    return !value || \r\n            angular.isDate(value) || \r\n            !angular.isFunction(filter) || \r\n            !filter(date);\r\n}\r\n\r\nfunction requiredValidator(value, ngModel) {\r\n    return value\r\n}\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\r\n    return  {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        transclude: true,\r\n        template: function(element, attrs) {\r\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n            \r\n            return '<div layout layout-align=\"start start\">' +\r\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\r\n                    '</md-button>' +\r\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                    '</md-input-container>' +\r\n                '</div>';\r\n        },\r\n        scope: {\r\n            \"minDate\": \"=mdpMinDate\",\r\n            \"maxDate\": \"=mdpMaxDate\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\",\r\n            \"placeholder\": \"@mdpPlaceholder\",\r\n            \"noFloat\": \"=mdpNoFloat\",\r\n            \"openOnClick\": \"=mdpOpenOnClick\",\r\n            \"disabled\": \"=?mdpDisabled\"\r\n        },\r\n        link: {\r\n            pre: function(scope, element, attrs, ngModel, $transclude) {\r\n                \r\n            },\r\n            post: function(scope, element, attrs, ngModel, $transclude) {\r\n                var inputElement = angular.element(element[0].querySelector('input')),\r\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n                    \r\n                $transclude(function(clone) {\r\n                   inputContainer.append(clone); \r\n                });  \r\n                \r\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n                \r\n                scope.type = scope.dateFormat ? \"text\" : \"date\"\r\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n                scope.model = ngModel;\r\n                \r\n                scope.isError = function() {\r\n                    return !ngModel.$pristine && !!ngModel.$invalid;\r\n                };\r\n                \r\n                // update input element if model has changed\r\n                ngModel.$formatters.unshift(function(value) {\r\n                    var date = angular.isDate(value) && moment(value);\r\n                    if(date && date.isValid()) \r\n                        updateInputElement(date.format(scope.dateFormat));\r\n                    else\r\n                        updateInputElement(null);\r\n                });\r\n                \r\n                ngModel.$validators.format = function(modelValue, viewValue) {\r\n                    return formatValidator(viewValue, scope.dateFormat);\r\n                };\r\n                \r\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\r\n                };\r\n                \r\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\r\n                };\r\n                \r\n                ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\r\n                };\r\n                \r\n                ngModel.$validators.required = function(modelValue, viewValue) {\r\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\r\n                };\r\n                \r\n                ngModel.$parsers.unshift(function(value) {\r\n                    var parsed = moment(value, scope.dateFormat, true);\r\n                    if(parsed.isValid()) {\r\n                        if(angular.isDate(ngModel.$modelValue)) {\r\n                            var originalModel = moment(ngModel.$modelValue);\r\n                            originalModel.year(parsed.year());\r\n                            originalModel.month(parsed.month());\r\n                            originalModel.date(parsed.date());\r\n                            \r\n                            parsed = originalModel;\r\n                        }\r\n                        return parsed.toDate(); \r\n                    } else\r\n                        return null;\r\n                });\r\n                \r\n                // update input element value\r\n                function updateInputElement(value) {\r\n                    inputElement[0].value = value;\r\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n                }\r\n                \r\n                function updateDate(date) {\r\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\r\n                        strValue = value.format(scope.dateFormat);\r\n    \r\n                    if(value.isValid()) {\r\n                        updateInputElement(strValue);\r\n                        ngModel.$setViewValue(strValue);\r\n                    } else {\r\n                        updateInputElement(date);\r\n                        ngModel.$setViewValue(date);\r\n                    }\r\n                    \r\n                    if(!ngModel.$pristine && \r\n                        messages.hasClass(\"md-auto-hide\") && \r\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n    \r\n                    ngModel.$render();\r\n                }\r\n                    \r\n                scope.showPicker = function(ev) {\r\n                    $mdpDatePicker(ngModel.$modelValue, {\r\n                \t    minDate: scope.minDate, \r\n                \t    maxDate: scope.maxDate,\r\n                \t    dateFilter: scope.dateFilter,\r\n                \t    targetEvent: ev\r\n            \t    }).then(updateDate);\r\n                };\r\n                \r\n                function onInputElementEvents(event) {\r\n                    if(event.target.value !== ngModel.$viewVaue)\r\n                        updateDate(event.target.value);\r\n                }\r\n                \r\n                inputElement.on(\"reset input blur\", onInputElementEvents);\r\n                \r\n                scope.$on(\"$destroy\", function() {\r\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            \"minDate\": \"@min\",\r\n            \"maxDate\": \"@max\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\",\r\n        },\r\n        link: function(scope, element, attrs, ngModel, $transclude) {\r\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n            \r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return formatValidator(viewValue, scope.format);\r\n            };\r\n            \r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return minDateValidator(viewValue, scope.format, scope.minDate);\r\n            };\r\n            \r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\r\n            };\r\n            \r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\r\n            };\r\n            \r\n            function showPicker(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n            \t    minDate: scope.minDate, \r\n            \t    maxDate: scope.maxDate,\r\n            \t    dateFilter: scope.dateFilter,\r\n            \t    targetEvent: ev\r\n        \t    }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n            \r\n            element.on(\"click\", showPicker);\r\n            \r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", showPicker);\r\n            });\r\n        }\r\n    }\r\n}]);\n})();"]}